{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../App.svelte",
    "../Header.svelte",
    "../Terms.svelte",
    "../Tasks.svelte",
    "../InitApp.svelte",
    "../Divisions.svelte",
    "../Types.svelte",
    "../Task.svelte",
    "../Term.svelte",
    "../Log.svelte",
    "../TermSingle.svelte",
    "../User.svelte",
    "../Timer.svelte",
    "../LastDays.svelte",
    "../Help.svelte",
    "../Title.svelte",
    "../Holder.svelte",
    "../Menu.svelte",
    "../Info.svelte",
    "../List.svelte",
    "../Back.svelte",
    "../Import.svelte",
    "../info.svelte",
    "../Info.svelte",
    "../Info.svelte",
    "../List.svelte",
    "../Main.svelte",
    "../Note.svelte",
    "../Error.svelte",
    "../Header.svelte",
    "../Holder.svelte",
    "../Success.svelte",
    "../Header.svelte",
    "../StatCount.svelte",
    "../InfoWrapper.svelte",
    "../StatLine.svelte",
    "../StatTask.svelte",
    "../Field.svelte",
    "../StatDate.svelte",
    "../Input.svelte",
    "../Helper.svelte",
    "../Field.svelte",
    "../GrafLine.svelte",
    "../DaysGraf.svelte"
  ],
  "sourcesContent": [
    "<script>\n  // Svelte\n  import { onMount } from \"svelte\";\n\n  // Stores\n  import { isInput, viewMode } from \"./stores/muthur\";\n\n  // Components\n  import ViewPort from \"./components/ViewPort.svelte\";\n\n  // Utils\n  import createMenu from \"./utils/menu\";\n\n  // Lifecycle\n  onMount(() => createMenu(false));\n\n  // Update\n  $: {\n    const isCreateMenu =\n      $viewMode === `tasks` ||\n      $viewMode === `terms` ||\n      $viewMode === `divisions` ||\n      $viewMode === `types` ||\n      $viewMode === `logs`;\n\n    createMenu(isCreateMenu, $isInput);\n  }\n</script>\n\n<style type=\"text/scss\">:global(html) {\n  scroll-behavior: smooth; }\n\n:global(body) {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  width: 100vw;\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  font-family: \"iosevka\", \"Courier New\", Courier, monospace;\n  font-size: 12px;\n  line-height: 1.2;\n  background: var(--bg);\n  color: var(--f);\n  -webkit-app-region: drag;\n  overflow-x: hidden; }\n</style>\n\n<ViewPort />\n",
    "<script>\n  // Store\n  import { viewMode } from \"../stores/muthur\";\n\n  // Components\n  import Timer from \"./Timer.svelte\";\n</script>\n\n<style>\n  header {\n    position: sticky;\n    top: 0;\n    z-index: 1000;\n    display: flex;\n    height: 50px;\n    align-items: center;\n    padding: 14px 20px;\n    background: var(--bg);\n    border-bottom: 1px solid var(--f_med);\n  }\n\n  h1 {\n    margin: 0;\n    font-size: inherit;\n    line-height: 1;\n    color: var(--f);\n    white-space: nowrap;\n  }\n\n  nav {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    margin-left: 20px;\n  }\n\n  ul {\n    display: flex;\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  button {\n    margin: 0;\n    padding: 2px 10px;\n    font-family: inherit;\n    font-size: inherit;\n    line-height: 1;\n    color: var(--f);\n    opacity: 0.6;\n    border: none;\n    background: none;\n    text-transform: uppercase;\n  }\n\n  .active {\n    opacity: 1;\n    background: var(--f);\n    color: var(--bg);\n  }\n</style>\n\n<header>\n  <h1>MU ○ TH ○ UR</h1>\n  <nav>\n    <ul>\n      <li>\n        <button class:active={$viewMode === `tasks`}>Tasks</button>\n      </li>\n      <li>\n        <button class:active={$viewMode === `terms`}>Glossary</button>\n      </li>\n      <li>\n        <button class:active={$viewMode === `divisions`}>Divisions</button>\n      </li>\n      <li>\n        <button class:active={$viewMode === `types`}>Types</button>\n      </li>\n      <li>\n        <button class:active={$viewMode === `logs`}>Logs</button>\n      </li>\n      <!-- <li>\n        <button class:active={$viewMode === `journal`}>Journal</button>\n      </li> -->\n    </ul>\n    <Timer />\n  </nav>\n</header>\n",
    "<script>\n  // Svelte\n  import { onMount } from \"svelte\";\n\n  // Utils\n  const { DateTime } = require(\"luxon\");\n\n  // Stores\n  import { dbTerms, dbLogs } from \"../../stores/db\";\n  import { viewMode, viewPage } from \"../../stores/muthur\";\n\n  // Components\n  import Holder from \"../../components/Holder.svelte\";\n  import LastDays from \"../../components/LastDays.svelte\";\n  import Help from \"../../components/Help.svelte\";\n  import List from \"../../components/List.svelte\";\n  import Info from \"./Info.svelte\";\n\n  // Model\n  let terms = false;\n  let currentIndex = -1;\n  let logs = [];\n\n  $: currentTerm = terms[currentIndex];\n\n  // Lifecycle\n  onMount(() => {\n    $dbTerms\n      .find()\n      .then(res => {\n        terms = res;\n      })\n      .catch(err => console.log(err));\n    $dbLogs\n      .find()\n      .then(res => {\n        logs = res.sort(\n          (a, b) => DateTime.fromISO(b.date) - DateTime.fromISO(a.date)\n        );\n      })\n      .catch(err => console.log(err));\n  });\n\n  // Events\n  function onWindowKeydown(e) {\n    switch (e.key) {\n      case `ArrowDown`:\n        e.preventDefault();\n        if (currentIndex < terms.length - 1) {\n          currentIndex = currentIndex + 1;\n        }\n        break;\n      case `ArrowUp`:\n        e.preventDefault();\n        if (currentIndex > 0) {\n          currentIndex = currentIndex - 1;\n        }\n        break;\n      case `Backspace`:\n        e.preventDefault();\n        $dbTerms.remove({ _id: currentTerm._id }).then(() =>\n          $dbTerms\n            .find()\n            .then(res => {\n              terms = res;\n            })\n            .catch(err => console.log(err))\n        );\n        break;\n      case `Enter`:\n        if (currentTerm.name) {\n          e.preventDefault();\n          viewMode.set(`termSingle`);\n          viewPage.set(currentTerm._id);\n        }\n        break;\n    }\n  }\n</script>\n\n<style>\n  main {\n    display: flex;\n    align-items: flex-start;\n  }\n</style>\n\n<svelte:window on:keydown={onWindowKeydown} />\n\n<main>\n  {#if terms.length}\n    <List {currentIndex} data={terms} />\n  {:else if terms}\n    <Holder />\n  {/if}\n  {#if currentTerm}\n    <Info {currentTerm} {logs} />\n  {:else}\n    <Help />\n  {/if}\n</main>\n<LastDays {logs} prop=\"term\" active={currentTerm ? currentTerm.name : false} />\n",
    "<script>\n  // Svelte\n  import { onMount } from \"svelte\";\n\n  // Utils\n  const { DateTime } = require(\"luxon\");\n\n  // Stores\n  import { dbTasks, dbLogs } from \"../../stores/db\";\n\n  // Components\n  import Holder from \"../../components/Holder.svelte\";\n  import LastDays from \"../../components/LastDays.svelte\";\n  import Help from \"../../components/Help.svelte\";\n  import List from \"../../components/List.svelte\";\n  import Info from \"./info.svelte\";\n\n  // Model\n  let tasks = false;\n  let currentIndex = -1;\n  let logs = [];\n\n  $: currentTask = tasks[currentIndex];\n\n  // Lifecycle\n  onMount(() => {\n    $dbTasks\n      .find()\n      .then(res => {\n        tasks = res;\n      })\n      .catch(err => console.log(err));\n    $dbLogs\n      .find()\n      .then(res => {\n        logs = res.sort(\n          (a, b) => DateTime.fromISO(b.date) - DateTime.fromISO(a.date)\n        );\n      })\n      .catch(err => console.log(err));\n  });\n\n  // Events\n  function onWindowKeydown(e) {\n    switch (e.key) {\n      case `ArrowDown`:\n        e.preventDefault();\n        if (currentIndex < tasks.length - 1) {\n          currentIndex = currentIndex + 1;\n        }\n        break;\n      case `ArrowUp`:\n        e.preventDefault();\n        if (currentIndex > 0) {\n          currentIndex = currentIndex - 1;\n        }\n        break;\n      case `Backspace`:\n        e.preventDefault();\n        $dbTasks.remove({ _id: currentTask._id }).then(() =>\n          $dbTasks\n            .find()\n            .then(res => {\n              tasks = res;\n            })\n            .catch(err => console.log(err))\n        );\n    }\n  }\n</script>\n\n<style>\n  main {\n    display: flex;\n    align-items: flex-start;\n  }\n</style>\n\n<svelte:window on:keydown={onWindowKeydown} />\n\n<main>\n  {#if tasks.length}\n    <List {currentIndex} data={tasks} />\n  {:else if tasks}\n    <Holder />\n  {/if}\n  {#if currentTask}\n    <Info {currentTask} {logs} />\n  {:else}\n    <Help />\n  {/if}\n</main>\n<LastDays {logs} prop=\"task\" active={currentTask ? currentTask.name : false} />\n",
    "<script>\n  // Svelte\n  import { onMount } from \"svelte\";\n\n  // Utils\n  import impotrData from \"../../utils/import\";\n\n  // Stores\n  import { dbUser } from \"../../stores/db\";\n  import { viewMode } from \"../../stores/muthur\";\n\n  // Components\n  import Title from \"./Title.svelte\";\n  import InitMenu from \"./Menu.svelte\";\n  import Import from \"./Import.svelte\";\n  import Back from \"./Back.svelte\";\n\n  // Model\n  let user = null;\n  let isCreate = false;\n  let importRes = null;\n\n  $: if (importRes && importRes !== `error`) {\n    isCreate = false;\n    const importTimeout = setTimeout(() => {\n      viewMode.set(`tasks`);\n      clearTimeout(importTimeout);\n    }, 1500);\n  } else if (importRes === `error`) {\n    isCreate = true;\n  }\n\n  // Lifecycle\n  onMount(() => {\n    $dbUser\n      .find()\n      .then(res => (user = res[0]))\n      .catch(err => console.log(err));\n\n    const checkTimeout = setTimeout(() => {\n      if (user) {\n        viewMode.set(`tasks`);\n        return;\n      }\n      isCreate = true;\n    }, 3500);\n  });\n\n  // Update\n  const toNewUser = () => {\n    viewMode.set(`createUser`);\n  };\n\n  const toImport = () => {\n    impotrData()\n      .then(res => (importRes = res))\n      .catch(err => console.log(err));\n  };\n</script>\n\n<style>\n  main {\n    display: flex;\n    align-items: stretch;\n    justify-content: stretch;\n    width: 100%;\n    height: 100%;\n  }\n\n  .content {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    flex-shrink: 0;\n    margin: 20px;\n  }\n</style>\n\n<main>\n  <div class=\"content\">\n    <Title />\n    {#if isCreate}\n      <InitMenu on:new={toNewUser} on:import={toImport} />\n    {/if}\n    <Import {importRes} />\n  </div>\n  <Back />\n</main>\n",
    "<script>\n  // Svelte\n  import { onMount } from \"svelte\";\n\n  // Utils\n  const { DateTime } = require(\"luxon\");\n\n  // Stores\n  import { dbDivisions, dbLogs } from \"../../stores/db\";\n\n  // Components\n  import Holder from \"../../components/Holder.svelte\";\n  import LastDays from \"../../components/LastDays.svelte\";\n  import Help from \"../../components/Help.svelte\";\n  import List from \"../../components/List.svelte\";\n  import Info from \"./Info.svelte\";\n\n  // Model\n  let divisions = false;\n  let currentIndex = -1;\n  let logs = [];\n\n  $: currentDivision = divisions[currentIndex];\n\n  // Lifecycle\n  onMount(() => {\n    $dbDivisions\n      .find()\n      .then(res => {\n        divisions = res;\n      })\n      .catch(err => console.log(err));\n    $dbLogs\n      .find()\n      .then(res => {\n        logs = res.sort(\n          (a, b) => DateTime.fromISO(b.date) - DateTime.fromISO(a.date)\n        );\n      })\n      .catch(err => console.log(err));\n  });\n\n  // Events\n  function onWindowKeydown(e) {\n    switch (e.key) {\n      case `ArrowDown`:\n        e.preventDefault();\n        if (currentIndex < divisions.length - 1) {\n          currentIndex = currentIndex + 1;\n        }\n        break;\n      case `ArrowUp`:\n        e.preventDefault();\n        if (currentIndex > 0) {\n          currentIndex = currentIndex - 1;\n        }\n        break;\n      case `Backspace`:\n        e.preventDefault();\n        $dbDivisions.remove({ _id: currentDivision._id }).then(() =>\n          $dbDivisions\n            .find()\n            .then(res => {\n              divisions = res;\n            })\n            .catch(err => console.log(err))\n        );\n    }\n  }\n</script>\n\n<style>\n  main {\n    display: flex;\n    align-items: flex-start;\n  }\n</style>\n\n<svelte:window on:keydown={onWindowKeydown} />\n\n<main>\n  {#if divisions.length}\n    <List data={divisions} {currentIndex} />\n  {:else if divisions}\n    <Holder />\n  {/if}\n  {#if currentDivision}\n    <Info {currentDivision} {logs} />\n  {:else}\n    <Help />\n  {/if}\n</main>\n<LastDays\n  {logs}\n  prop=\"division\"\n  active={currentDivision ? currentDivision.name : false} />\n",
    "<script>\n  // Svelte\n  import { onMount } from \"svelte\";\n\n  // Utils\n  const { DateTime } = require(\"luxon\");\n\n  // Stores\n  import { dbTypes, dbLogs } from \"../../stores/db\";\n\n  // Components\n  import Holder from \"../../components/Holder.svelte\";\n  import LastDays from \"../../components/LastDays.svelte\";\n  import Help from \"../../components/Help.svelte\";\n  import List from \"../../components/List.svelte\";\n  import Info from \"./Info.svelte\";\n\n  // Model\n  let types = false;\n  let currentIndex = -1;\n  let logs = [];\n\n  $: currentType = types[currentIndex];\n\n  // Lifecycle\n  onMount(() => {\n    $dbTypes\n      .find()\n      .then(res => {\n        types = res;\n      })\n      .catch(err => console.log(err));\n    $dbLogs\n      .find()\n      .then(res => {\n        logs = res.sort(\n          (a, b) => DateTime.fromISO(b.date) - DateTime.fromISO(a.date)\n        );\n      })\n      .catch(err => console.log(err));\n  });\n\n  // Events\n  function onWindowKeydown(e) {\n    switch (e.key) {\n      case `ArrowDown`:\n        e.preventDefault();\n        if (currentIndex < types.length - 1) {\n          currentIndex = currentIndex + 1;\n        }\n        break;\n      case `ArrowUp`:\n        e.preventDefault();\n        if (currentIndex > 0) {\n          currentIndex = currentIndex - 1;\n        }\n        break;\n      case `Backspace`:\n        e.preventDefault();\n        $dbTypes.remove({ _id: currentType._id }).then(() =>\n          $dbTypes\n            .find()\n            .then(res => {\n              types = res;\n            })\n            .catch(err => console.log(err))\n        );\n    }\n  }\n</script>\n\n<style>\n  main {\n    display: flex;\n    align-items: flex-start;\n  }\n</style>\n\n<svelte:window on:keydown={onWindowKeydown} />\n\n<main>\n  {#if types.length}\n    <List data={types} {currentIndex} />\n  {:else if types}\n    <Holder />\n  {/if}\n  {#if currentType}\n    <Info {currentType} {logs} />\n  {:else}\n    <Help />\n  {/if}\n</main>\n<LastDays {logs} prop=\"type\" active={currentType ? currentType.name : false} />\n",
    "<script>\n  // Svelte\n  import { afterUpdate } from \"svelte\";\n\n  // Stores\n  import { viewMode } from \"../../stores/muthur\";\n\n  // Components\n  import CreateHeader from \"../../components/create/Header.svelte\";\n  import CreateHolder from \"../../components/create/Holder.svelte\";\n  import CreateError from \"../../components/create/Error.svelte\";\n  import CreateSuccess from \"../../components/create/Success.svelte\";\n  import CreateSave from \"../../components/create/Save.svelte\";\n  import SetName from \"../../components/set/Name.svelte\";\n  import SetTerm from \"../../components/set/Term.svelte\";\n  import SetDesc from \"../../components/set/Desc.svelte\";\n  import SetNote from \"../../components/set/Note.svelte\";\n\n  // Model\n  let list;\n  let task = {};\n  let term = {};\n  let msgError = false;\n\n  // Lifecycle\n  afterUpdate(() => {\n    const scrollTimeout = setTimeout(() => {\n      window.scrollTo(0, list.scrollHeight + 200);\n      clearTimeout(scrollTimeout);\n    }, 100);\n  });\n\n  // Updates\n  $: isSuccess = task._id && (!term.name || term._id);\n\n  $: if (isSuccess) {\n    const saveTimeout = setTimeout(() => {\n      viewMode.set(`tasks`);\n      clearTimeout(saveTimeout);\n    }, 1500);\n  }\n\n  // Events\n  function onWindowKeydown(e) {\n    switch (e.key) {\n      case `Escape`:\n        viewMode.set(`tasks`);\n        break;\n    }\n  }\n</script>\n\n<style>\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n</style>\n\n<svelte:window on:keydown={onWindowKeydown} />\n\n<CreateHeader title=\"Create Task\" />\n<ul bind:this={list}>\n  <SetName bind:obj={task} bind:msgError />\n  {#if task.name}\n    <SetTerm bind:obj={task} bind:term bind:msgError />\n  {:else}\n    <CreateHolder name=\"term\" />\n  {/if}\n  {#if term.name}\n    <SetDesc bind:obj={term} bind:msgError />\n  {/if}\n  {#if term.desc}\n    <SetNote bind:obj={term} bind:msgError />\n  {:else if term.name}\n    <CreateHolder name=\"termNote\" />\n  {/if}\n  {#if (task.term && !term.name) || term.note}\n    <CreateSave bind:task bind:term bind:msgError />\n  {:else}\n    <CreateHolder name=\"save\" />\n  {/if}\n  <CreateError {msgError} />\n  <CreateSuccess {isSuccess} {task} {term} />\n</ul>\n",
    "<script>\n  // Svelte\n  import { afterUpdate } from \"svelte\";\n\n  // Stores\n  import { viewMode } from \"../../stores/muthur\";\n\n  // Components\n  import CreateHeader from \"../../components/create/Header.svelte\";\n  import CreateHolder from \"../../components/create/Holder.svelte\";\n  import CreateError from \"../../components/create/Error.svelte\";\n  import CreateSuccess from \"../../components/create/Success.svelte\";\n  import CreateSave from \"../../components/create/Save.svelte\";\n  import SetName from \"../../components/set/Name.svelte\";\n  import SetDesc from \"../../components/set/Desc.svelte\";\n  import SetNote from \"../../components/set/Note.svelte\";\n\n  // Model\n  let list;\n  let term = {};\n  let msgError = false;\n\n  $: isSuccess = term._id ? true : false;\n\n  // Lifecycle\n  afterUpdate(() => {\n    const scrollTimeout = setTimeout(() => {\n      window.scrollTo(0, list.scrollHeight + 200);\n      clearTimeout(scrollTimeout);\n    }, 100);\n  });\n\n  // Update\n  $: if (isSuccess) {\n    const saveTimeout = setTimeout(() => {\n      viewMode.set(`terms`);\n      clearTimeout(saveTimeout);\n    }, 1500);\n  }\n\n  // Events\n  function onWindowKeydown(e) {\n    switch (e.key) {\n      case `Escape`:\n        viewMode.set(`terms`);\n        break;\n    }\n  }\n</script>\n\n<style>\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n</style>\n\n<svelte:window on:keydown={onWindowKeydown} />\n\n<CreateHeader title=\"Create Term\" />\n<ul bind:this={list}>\n  <SetName bind:obj={term} bind:msgError />\n  {#if term.name}\n    <SetDesc bind:obj={term} bind:msgError />\n  {:else}\n    <CreateHolder name=\"desc\" />\n  {/if}\n  {#if term.desc}\n    <SetNote bind:obj={term} bind:msgError />\n  {:else}\n    <CreateHolder name=\"note\" />\n  {/if}\n  {#if term.note}\n    <CreateSave bind:term bind:msgError />\n  {:else}\n    <CreateHolder name=\"save\" />\n  {/if}\n  <CreateError {msgError} />\n  <CreateSuccess {term} {isSuccess} />\n</ul>\n",
    "<script>\n  // Svelte\n  import { afterUpdate, onMount, onDestroy } from \"svelte\";\n\n  // Utils\n  const { DateTime } = require(\"luxon\");\n\n  // Stores\n  import { viewMode } from \"../../stores/muthur\";\n  import { startTime, stopTime } from \"../../stores/timer\";\n\n  // Components\n  import CreateHeader from \"../../components/create/Header.svelte\";\n  import CreateHolder from \"../../components/create/Holder.svelte\";\n  import CreateError from \"../../components/create/Error.svelte\";\n  import CreateSuccess from \"../../components/create/Success.svelte\";\n  import CreateSave from \"../../components/create/Save.svelte\";\n  import SetDate from \"../../components/set/Date.svelte\";\n  import SetTime from \"../../components/set/Time.svelte\";\n  import SetTerm from \"../../components/set/Term.svelte\";\n  import SetDesc from \"../../components/set/Desc.svelte\";\n  import SetNote from \"../../components/set/Note.svelte\";\n  import SetType from \"../../components/set/Type.svelte\";\n  import SetDivision from \"../../components/set/Division.svelte\";\n  import SetTask from \"../../components/set/Task.svelte\";\n\n  // Model\n  let list;\n  let log = {};\n  let term = {};\n  let type = {};\n  let division = {};\n  let task = {};\n  let msgError = false;\n\n  // Lifecycle\n  onMount(() => {\n    if ($startTime) {\n      const diff = $stopTime.diff($startTime, [\"hours\", \"minutes\"]);\n      log.date = $startTime.toISO();\n      log.time = diff.hours + Math.ceil((diff.minutes / 60) * 10) / 10;\n    }\n  });\n\n  afterUpdate(() => {\n    const scrollTimeout = setTimeout(() => {\n      window.scrollTo(0, list.scrollHeight + 200);\n      clearTimeout(scrollTimeout);\n    }, 100);\n  });\n\n  onDestroy(() => {\n    startTime.set(false);\n    stopTime.set(false);\n  });\n\n  // Update\n  $: isSuccess =\n    log._id &&\n    (!term.name || term._id) &&\n    (!type.name || type._id) &&\n    (!division.name || division._id) &&\n    (!task.name || task._id);\n\n  $: if (isSuccess) {\n    const saveTimeout = setTimeout(() => {\n      viewMode.set(`logs`);\n      clearTimeout(saveTimeout);\n    }, 1500);\n  }\n\n  // Events\n  function onWindowKeydown(e) {\n    switch (e.key) {\n      case `Escape`:\n        viewMode.set(`logs`);\n        break;\n    }\n  }\n</script>\n\n<style>\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n</style>\n\n<svelte:window on:keydown={onWindowKeydown} />\n\n<CreateHeader title=\"Create Log\" />\n<ul bind:this={list}>\n  <SetDate bind:obj={log} bind:msgError />\n  {#if log.date}\n    <SetTime bind:obj={log} bind:msgError />\n  {:else}\n    <CreateHolder name=\"time\" />\n  {/if}\n  {#if log.time}\n    <SetTerm bind:obj={log} bind:term bind:msgError />\n  {:else}\n    <CreateHolder name=\"term\" />\n  {/if}\n  {#if term.name}\n    <SetDesc bind:obj={term} bind:msgError />\n  {/if}\n  {#if term.desc}\n    <SetNote bind:obj={term} bind:msgError />\n  {:else if term.name}\n    <CreateHolder name=\"termNote\" />\n  {/if}\n  {#if (log.term && !term.name) || term.note}\n    <SetDivision bind:obj={log} bind:division bind:msgError />\n  {:else}\n    <CreateHolder name=\"division\" />\n  {/if}\n  {#if division.name}\n    <SetDesc bind:obj={division} bind:msgError />\n  {/if}\n  {#if (log.division && !division.name) || division.desc}\n    <SetType bind:obj={log} bind:type bind:msgError />\n  {:else}\n    <CreateHolder name=\"type\" />\n  {/if}\n  {#if type.name}\n    <SetDesc bind:obj={type} bind:msgError />\n  {/if}\n  {#if (log.type && !type.name) || type.desc}\n    <SetTask bind:obj={log} bind:task bind:msgError />\n  {:else}\n    <CreateHolder name=\"task\" />\n  {/if}\n  {#if log.task}\n    <CreateSave\n      bind:log\n      bind:term\n      bind:type\n      bind:division\n      bind:task\n      bind:msgError />\n  {:else}\n    <CreateHolder name=\"save\" />\n  {/if}\n  <CreateSuccess {log} {term} {type} {division} {task} {isSuccess} />\n  <CreateError {msgError} />\n</ul>\n",
    "<script>\n  // Svelte\n  import { onMount, onDestroy } from \"svelte\";\n\n  // Components\n  import SingleHeader from \"../../components/single/Header.svelte\";\n  import Main from \"./Main.svelte\";\n  import Note from \"./Note.svelte\";\n\n  // Stores\n  import { viewPage, viewMode } from \"../../stores/muthur\";\n  import { dbTerms } from \"../../stores/db\";\n\n  // Model\n  let page = `main`;\n  let data = null;\n  let editField = false;\n\n  // Lifecycle\n  onMount(() => updateData());\n\n  onDestroy(() => viewPage.set(false));\n\n  // Update\n  function onChange(e) {\n    console.log(e);\n    const { type, value } = e.detail;\n    $dbTerms\n      .update({ _id: data._id }, { $set: { [type]: value } })\n      .then(res => {\n        console.log(res);\n        updateData();\n      })\n      .catch(err => console.log(err));\n  }\n\n  const updateData = () =>\n    $dbTerms\n      .find({ _id: $viewPage })\n      .then(res => (data = res[0]))\n      .catch(err => console.log(err));\n\n  // Events\n  function onWindowKeydown(e) {\n    switch (e.key) {\n      case `Escape`:\n        viewMode.set(`terms`);\n        break;\n      case `ArrowLeft`:\n        if (!editField)\n          switch (page) {\n            case `main`:\n              page = `note`;\n              break;\n            case `note`:\n              page = `main`;\n              break;\n          }\n        break;\n      case `ArrowRight`:\n        if (!editField)\n          switch (page) {\n            case `main`:\n              page = `note`;\n              break;\n            case `note`:\n              page = `main`;\n              break;\n          }\n        break;\n    }\n  }\n</script>\n\n<style>\n  main {\n    padding: 0 10%;\n  }\n\n  @keyframes skew {\n    0% {\n      transform: skewX(20deg);\n    }\n    100% {\n      transform: skewX(-20deg);\n    }\n  }\n\n  main::before,\n  main::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 55%;\n    display: block;\n    height: 100%;\n    background-image: linear-gradient(to left, var(--f), var(--bg));\n    opacity: 0.5;\n    animation-name: skew;\n    animation-duration: 10s;\n    animation-iteration-count: infinite;\n    animation-direction: alternate;\n    animation-timing-function: linear;\n  }\n\n  main::after {\n    content: \"\";\n    position: absolute;\n    right: 0;\n    left: 55%;\n    background-image: linear-gradient(to right, var(--f), var(--bg));\n    animation-direction: alternate-reverse;\n  }\n</style>\n\n<svelte:window on:keydown={onWindowKeydown} />\n\n{#if data}\n  <SingleHeader {page} type=\"term\" />\n  <main>\n    {#if page === `main`}\n      <Main\n        fields={[{ type: `name`, value: data.name }, { type: `desc`, value: data.desc }]}\n        on:change={onChange}\n        bind:editField />\n    {:else if page === `note`}\n      <Note note={data.note} on:change={onChange} bind:editField />\n    {/if}\n  </main>\n{/if}\n",
    "<script>\n  // Svelte\n  import { afterUpdate } from \"svelte\";\n\n  // Utils\n  import { divisions, types } from \"../../utils/defaults\";\n\n  // Stores\n  import { dbDivisions, dbTypes } from \"../../stores/db\";\n  import { viewMode } from \"../../stores/muthur\";\n\n  // Components\n  import CreateHeader from \"../../components/create/Header.svelte\";\n  import CreateHolder from \"../../components/create/Holder.svelte\";\n  import CreateError from \"../../components/create/Error.svelte\";\n  import CreateSuccess from \"../../components/create/Success.svelte\";\n  import CreateSave from \"../../components/create/Save.svelte\";\n  import SetName from \"../../components/set/Name.svelte\";\n  import SetDesc from \"../../components/set/Desc.svelte\";\n\n  // Model\n  let list;\n  let user = {};\n  let msgError = false;\n\n  $: isSuccess = user._id ? true : false;\n\n  // Lifecycle\n  afterUpdate(() => {\n    const scrollTimeout = setTimeout(() => {\n      window.scrollTo(0, list.scrollHeight + 200);\n      clearTimeout(scrollTimeout);\n    }, 100);\n  });\n\n  // Method\n  const createDefaults = () => {\n    $dbDivisions\n      .insert(divisions)\n      .then()\n      .catch(err => console.log(err));\n    $dbTypes\n      .insert(types)\n      .then()\n      .catch(err => console.log(err));\n  };\n\n  // Update\n  $: if (isSuccess) {\n    createDefaults();\n    const saveTimeout = setTimeout(() => {\n      viewMode.set(`tasks`);\n      clearTimeout(saveTimeout);\n    }, 1500);\n  }\n\n  // Events\n  function onWindowKeydown(e) {\n    switch (e.key) {\n      case `Escape`:\n        viewMode.set(`init`);\n        break;\n    }\n  }\n</script>\n\n<style>\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n</style>\n\n<svelte:window on:keydown={onWindowKeydown} />\n\n<CreateHeader title=\"Create User\" />\n<ul bind:this={list}>\n  <SetName bind:obj={user} bind:msgError />\n  {#if user.name}\n    <SetDesc bind:obj={user} bind:msgError />\n  {:else}\n    <CreateHolder name=\"desc\" />\n  {/if}\n  {#if user.desc}\n    <CreateSave bind:user bind:msgError />\n  {:else}\n    <CreateHolder name=\"save\" />\n  {/if}\n  <CreateError {msgError} />\n  <CreateSuccess {user} {isSuccess} />\n</ul>\n",
    "<script>\n  // Utils\n  const { DateTime } = require(\"luxon\");\n\n  // Stores\n  import { viewMode } from \"../stores/muthur\";\n  import { startTime, stopTime, time } from \"../stores/timer\";\n\n  // Events\n  function onWindowKeydown(e) {\n    switch (e.key) {\n      case `Enter`:\n        if (e.metaKey || e.ctrlKey) {\n          if ($startTime) {\n            stopTime.set(DateTime.local());\n            viewMode.set(`createLog`);\n          } else {\n            startTime.set(DateTime.local());\n          }\n        }\n    }\n  }\n</script>\n\n<style>\n  .desc {\n    color: var(--f_med);\n  }\n\n  .active {\n    color: var(--error);\n  }\n</style>\n\n<svelte:window on:keydown={onWindowKeydown} />\n\n<div>\n  <span class=\"desc\">TIMER:</span>\n  {#if $time !== false}\n    <span class=\"active\">{$time} hours</span>\n  {:else}\n    <span>STOP</span>\n  {/if}\n</div>\n",
    "<script>\n  // Utils\n  const { DateTime } = require(\"luxon\");\n  import fixFloat from \"../utils/fixJsFloat\";\n\n  // Models\n  let daysCount = 90;\n  let days = new Array(daysCount).fill({});\n  let now = DateTime.local();\n  export let logs;\n  export let prop = false;\n  export let active = false;\n\n  $: daysLogs = logs\n    ? days\n        .map((day, i) =>\n          logs.filter(\n            log =>\n              DateTime.fromISO(log.date).toISODate() ===\n              now.minus({ days: i }).toISODate()\n          )\n        )\n        .reverse()\n    : [];\n\n  $: data = prop ? getDataProp(daysLogs, prop) : getData(daysLogs);\n\n  $: allTime = fixFloat(\n    data.reduce(\n      (all, day) => all + day.reduce((all, log) => all + log.time, 0),\n      0\n    )\n  );\n\n  const getDataProp = (days, prop) => {\n    const newData = [];\n    days.forEach(day => {\n      let newDay = [];\n      day.forEach(log => {\n        if (newDay.indexOf(log[prop]) < 0) {\n          newDay.push(log[prop]);\n        }\n      });\n      newDay = newDay.map(item => ({ name: item, time: 0 }));\n      day.forEach(log =>\n        newDay.forEach(item =>\n          item.name === log[prop] ? (item.time = item.time + log.time) : null\n        )\n      );\n      newData.push(newDay);\n    });\n    return newData;\n  };\n\n  const getData = days => {\n    const newData = [];\n    days.forEach(day => {\n      const newDay = [{ time: 0 }];\n      day.forEach(log => (newDay[0].time = newDay[0].time + log.time));\n      newData.push(newDay);\n    });\n    return newData;\n  };\n</script>\n\n<style>\n  section {\n    position: sticky;\n    bottom: 0;\n    margin-top: auto;\n    /* padding: 10px 0 0; */\n    background: var(--bg);\n    border-top: 1px solid var(--f_med);\n  }\n\n  .graf {\n    display: flex;\n    align-items: stretch;\n    justify-content: stretch;\n    width: 100%;\n    height: 50px;\n    margin: 0 0 10px;\n    padding: 0 2px;\n  }\n\n  .day {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    align-items: stretch;\n    height: 100%;\n    width: 100%;\n    padding: 0px 1px;\n    border-right: 1px solid var(--f_med);\n  }\n\n  .item {\n    display: block;\n    background: var(--f_t);\n    transition: background-color 0.2s;\n    border-bottom: 1px solid var(--f_med);\n  }\n\n  .item:first-child {\n    margin: 0;\n  }\n\n  .item--active {\n    background: var(--f);\n  }\n\n  .stat {\n    display: flex;\n    justify-content: space-between;\n    padding: 0 20px;\n  }\n\n  p {\n    margin: 0 0 10px;\n  }\n</style>\n\n<section>\n  <div class=\"graf\">\n    {#each data as day, i (i)}\n      <div class=\"day\">\n        {#each day as log, i (i)}\n          {#if prop}\n            <span\n              class={log.name === active ? 'item item--active' : 'item'}\n              style={`height: ${log.time / (day.reduce((all, item) => all + item.time, 0) / 100)}%`} />\n          {:else}\n            <span\n              class=\"item item--active\"\n              style={`height: ${log.time / (24 / 100)}%`} />\n          {/if}\n        {/each}\n      </div>\n    {/each}\n  </div>\n  <div class=\"stat\">\n    <p>{parseInt((allTime / daysCount) * 10) / 10} h/d</p>\n    <p>{allTime} hours</p>\n    <p>{daysCount} days</p>\n  </div>\n</section>\n",
    "<script>\n  // Stores\n  import { viewMode } from \"../stores/muthur\";\n\n  // Components\n  import InfoWrapper from \"./InfoWrapper.svelte\";\n</script>\n\n<style>\n  p {\n    margin: 0 0px 15px;\n    color: var(--f_med);\n  }\n\n  b {\n    display: inline-block;\n    min-width: 16px;\n    padding: 2px;\n    font-weight: normal;\n    text-align: center;\n    color: var(--f);\n    background: var(--bg);\n    border-radius: 3px;\n    box-shadow: 1px 3px 0 var(--f);\n  }\n</style>\n\n<InfoWrapper title=\"help\">\n  {#if $viewMode === `terms`}\n    <p>\n      <b>Enter</b>\n      edit term\n    </p>\n  {/if}\n  <p>\n    <b>↑</b>\n    or\n    <b>↓</b>\n    switch items\n  </p>\n  <p>\n    <b>←</b>\n    or\n    <b>→</b>\n    switch menu\n  </p>\n  <p>\n    <b>cmd (ctrl)</b>\n    +\n    <b>t</b>\n    create task\n  </p>\n  <p>\n    <b>cmd (ctrl)</b>\n    +\n    <b>p</b>\n    create term\n  </p>\n  <p>\n    <b>cmd (ctrl)</b>\n    +\n    <b>l</b>\n    create log\n  </p>\n  <p>\n    <b>Backspace</b>\n    del item\n  </p>\n  <p>\n    <b>cmd (ctrl)</b>\n    +\n    <b>Enter</b>\n    start / stop timer\n  </p>\n  <p>\n    <b>cmd (ctrl)</b>\n    +\n    <b>s</b>\n    export data\n  </p>\n</InfoWrapper>\n",
    "<script>\n  // Svelte\n  import { onMount } from \"svelte\";\n\n  // Model\n  let isHiShow = false;\n  let isNameShow = false;\n  let isDescShow = false;\n\n  // Lifecycle\n  onMount(() => {\n    const hiTimeout = setTimeout(() => {\n      isHiShow = true;\n      clearTimeout(hiTimeout);\n    }, 300);\n\n    const nameTimeout = setTimeout(() => {\n      isNameShow = true;\n      clearTimeout(nameTimeout);\n    }, 1000);\n\n    const descTimeout = setTimeout(() => {\n      isDescShow = true;\n      clearTimeout(descTimeout);\n    }, 2000);\n  });\n</script>\n\n<style>\n  p {\n    margin: 0 0 10px;\n    font-size: inherit;\n    text-transform: uppercase;\n    opacity: 0;\n    transition: 1s;\n  }\n\n  h1 {\n    margin: 0 0 10px;\n    padding: 5px 10px;\n    font-size: inherit;\n    transition: 1s;\n  }\n\n  span {\n    color: var(--bg);\n  }\n\n  .active {\n    opacity: 1;\n  }\n\n  h1.active {\n    background: var(--f);\n  }\n</style>\n\n<p class:active={isHiShow}>Hello, I am</p>\n<h1 class:active={isNameShow}>\n  <span class:active={isNameShow}>MU</span>\n  ○\n  <span class:active={isNameShow}>TH</span>\n  ○\n  <span class:active={isNameShow}>UR</span>\n</h1>\n<p class:active={isDescShow}>I watch what you do and what you need to do</p>\n",
    "<style>\n  section {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: stretch;\n    height: calc(100% - 135px);\n    width: 40%;\n    margin-left: 20px;\n  }\n\n  @keyframes skew {\n    0% {\n      transform: skewX(5deg);\n    }\n    100% {\n      transform: skewX(-5deg);\n    }\n  }\n\n  section::before,\n  section::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 10%;\n    right: 10%;\n    display: block;\n    height: 100%;\n    background-image: linear-gradient(to left, var(--f), var(--bg));\n    opacity: 0.5;\n    animation-name: skew;\n    animation-duration: 10s;\n    animation-iteration-count: infinite;\n    animation-direction: alternate;\n    animation-timing-function: linear;\n  }\n\n  section::after {\n    content: \"\";\n    position: absolute;\n    animation-direction: alternate-reverse;\n  }\n\n  h2 {\n    position: relative;\n    z-index: 100;\n    margin: auto;\n    font-size: inherit;\n    padding: 5px 10px;\n    text-transform: uppercase;\n    background: var(--f);\n    color: var(--bg);\n  }\n</style>\n\n<section>\n  <h2>empty</h2>\n</section>\n",
    "<script>\n  // Svelte\n  import { createEventDispatcher } from \"svelte\";\n\n  // Model\n  let isNew = false;\n  let select = `new`;\n\n  const dispatch = createEventDispatcher();\n\n  // Events\n  function onWindowKeydown(e) {\n    switch (e.key) {\n      case `Enter`:\n        e.preventDefault();\n        if (select === `new`) {\n          dispatch(`new`);\n        } else {\n          dispatch(`import`);\n        }\n        break;\n      case `ArrowDown`:\n      case `ArrowUp`:\n        if (select === `new`) {\n          select = `import`;\n          break;\n        }\n        select = `new`;\n        break;\n    }\n  }\n</script>\n\n<style>\n  ul {\n    margin: 40px 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  li {\n    padding: 5px 10px;\n    margin-bottom: 5px;\n    text-transform: uppercase;\n    transition: 0.2s;\n  }\n\n  li::before {\n    content: \"○ \";\n    color: var(--bg);\n  }\n\n  .active {\n    color: var(--bg);\n    background: var(--f);\n  }\n\n  p {\n    margin: 0 0px 15px;\n    color: var(--f_med);\n  }\n\n  b {\n    display: inline-block;\n    min-width: 16px;\n    padding: 2px;\n    font-weight: normal;\n    text-align: center;\n    color: var(--f);\n    background: var(--bg);\n    border-radius: 3px;\n    box-shadow: 1px 3px 0 var(--f);\n  }\n</style>\n\n<svelte:window on:keydown={onWindowKeydown} />\n\n<ul>\n  <li class:active={select === `new`}>Create new user</li>\n  <li class:active={select === `import`}>Import data</li>\n</ul>\n\n<div>\n  <p>use keyboard</p>\n  <p>\n    <b>↑</b>\n    or\n    <b>↓</b>\n    switch items\n  </p>\n  <p>\n    <b>Enter</b>\n    select\n  </p>\n</div>\n",
    "<script>\n  // Svelte\n  import { beforeUpdate } from \"svelte\";\n\n  // Stores\n  import { dbTasks, dbLogs } from \"../../stores/db\";\n\n  // Components\n  import InfoWrapper from \"../../components/InfoWrapper.svelte\";\n  import StatCount from \"../../components/StatCount.svelte\";\n  import StatTask from \"../../components/StatTask.svelte\";\n  import StatLine from \"../../components/StatLine.svelte\";\n  import StatDate from \"../../components/StatDate.svelte\";\n\n  // Model\n  export let currentTerm;\n  export let logs;\n  let tasksCount = null;\n  let allTaskCount = 0;\n  let selectLogs = [];\n\n  $: taskPercent = tasksCount / (allTaskCount / 100);\n\n  $: $dbLogs\n    .find({ term: currentTerm.name })\n    .then(res => {\n      selectLogs = res;\n    })\n    .catch(err => console.log(err));\n\n  // Lifecycle\n  beforeUpdate(() => {\n    $dbTasks\n      .count()\n      .then(res => (allTaskCount = res))\n      .catch(err => console.log(err));\n    $dbTasks\n      .count({ term: name })\n      .then(res => (tasksCount = res))\n      .catch(err => console.log(err));\n  });\n</script>\n\n<style>\n  li {\n    padding: 0;\n    margin-bottom: 15px;\n  }\n</style>\n\n<InfoWrapper title={currentTerm._id}>\n  <li>{currentTerm.desc}</li>\n  <StatTask selector={{ term: currentTerm.name }} />\n  {#if selectLogs.length}\n    <StatCount {selectLogs} {logs} />\n    <StatDate {selectLogs} />\n    <StatLine {selectLogs} selector=\"division\" />\n    <StatLine {selectLogs} selector=\"type\" />\n  {/if}\n</InfoWrapper>\n",
    "<script>\n  // Svelte\n  import { afterUpdate } from \"svelte\";\n\n  // Model\n  let listHeight;\n  export let data;\n  export let currentIndex;\n\n  // Lifecycle\n  afterUpdate(() => {\n    window.scrollTo({\n      top: currentIndex * (listHeight / data.length),\n      left: 0,\n      behavior: \"smooth\"\n    });\n  });\n</script>\n\n<style>\n  ul {\n    width: 40%;\n    flex-shrink: 0;\n    margin: 0;\n    padding: 20px;\n    list-style: none;\n  }\n\n  li {\n    position: relative;\n    display: flex;\n    padding: 5px;\n    transition: 0.1s;\n  }\n\n  .active {\n    color: var(--bg);\n    background: var(--f);\n  }\n\n  .active::before {\n    content: \"◉\";\n    margin-right: 5px;\n  }\n</style>\n\n<ul bind:clientHeight={listHeight}>\n  {#each data as item, i (item._id)}\n    <li class:active={i === currentIndex}>{item.name}</li>\n  {/each}\n</ul>\n",
    "<style>\n  div {\n    position: relative;\n    height: 100%;\n    margin-left: 40px;\n    width: 100%;\n  }\n\n  @keyframes skew {\n    0% {\n      transform: skewX(5deg);\n    }\n    100% {\n      transform: skewX(-5deg);\n    }\n  }\n\n  div::before,\n  div::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    display: block;\n    height: 100%;\n    background-image: linear-gradient(to right, var(--f), var(--bg));\n    opacity: 0.5;\n    animation-name: skew;\n    animation-duration: 10s;\n    animation-iteration-count: infinite;\n    animation-direction: alternate;\n    animation-timing-function: linear;\n  }\n\n  div::after {\n    content: \"\";\n    position: absolute;\n    animation-direction: alternate-reverse;\n  }\n</style>\n\n<div />\n",
    "<script>\n  // Utils\n  import typewriter from \"../../utils/typewriter\";\n\n  // Model\n  export let importRes;\n</script>\n\n<style>\n  ul {\n    margin: 40px 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  li {\n    margin: 0 0 10px;\n    text-transform: uppercase;\n  }\n\n  .error {\n    color: var(--error);\n  }\n</style>\n\n<ul>\n  {#if importRes === `error`}\n    <li in:typewriter class=\"error\">Wrong data</li>\n  {:else if importRes}\n    {#if importRes.user}\n      <li in:typewriter>User Imported</li>\n    {/if}\n    {#if importRes.terms !== `error`}\n      <li in:typewriter>Terms Imported</li>\n    {:else}\n      <li in:typewriter class=\"error\">Terms Not Imported</li>\n    {/if}\n    {#if importRes.divisions !== `error`}\n      <li in:typewriter>Divisions Imported</li>\n    {:else}\n      <li in:typewriter class=\"error\">Divisions Not Imported</li>\n    {/if}\n    {#if importRes.types !== `error`}\n      <li in:typewriter>Types Imported</li>\n    {:else}\n      <li in:typewriter class=\"error\">Types Not Imported</li>\n    {/if}\n    {#if importRes.tasks !== `error`}\n      <li in:typewriter>Tasks Imported</li>\n    {:else}\n      <li in:typewriter class=\"error\">Tasks Not Imported</li>\n    {/if}\n    {#if importRes.logs !== `error`}\n      <li in:typewriter>Logs Imported</li>\n    {:else}\n      <li in:typewriter class=\"error\">Logs Not Imported</li>\n    {/if}\n  {/if}\n</ul>\n",
    "<script>\n  // Utils\n  const { DateTime } = require(\"luxon\");\n\n  // Stores\n  import { dbLogs } from \"../../stores/db\";\n\n  // Components\n  import InfoWrapper from \"../../components/InfoWrapper.svelte\";\n  import StatCount from \"../../components/StatCount.svelte\";\n  import StatLine from \"../../components/StatLine.svelte\";\n  import StatDate from \"../../components/StatDate.svelte\";\n\n  // Model\n  export let currentTask;\n  export let logs;\n  let selectLogs = [];\n\n  $: $dbLogs\n    .find({ task: currentTask.name })\n    .then(res => {\n      selectLogs = res;\n    })\n    .catch(err => console.log(err));\n</script>\n\n<style>\n  li {\n    padding: 0;\n    margin-bottom: 15px;\n  }\n\n  .proj {\n    font-style: italic;\n    text-transform: uppercase;\n    color: var(--f_med);\n  }\n</style>\n\n<InfoWrapper title={currentTask._id}>\n  <li>\n    <span class=\"proj\">term:</span>\n    {currentTask.term}\n  </li>\n  {#if selectLogs.length}\n    <StatCount {selectLogs} {logs} />\n    <StatDate {selectLogs} />\n    <StatLine {selectLogs} selector=\"division\" />\n    <StatLine {selectLogs} selector=\"type\" />\n  {/if}\n</InfoWrapper>\n",
    "<script>\n  // Stores\n  import { dbLogs } from \"../../stores/db\";\n\n  // Components\n  import InfoWrapper from \"../../components/InfoWrapper.svelte\";\n  import StatCount from \"../../components/StatCount.svelte\";\n  import StatLine from \"../../components/StatLine.svelte\";\n  import StatDate from \"../../components/StatDate.svelte\";\n\n  // Model\n  export let currentType;\n  export let logs;\n  let selectLogs = [];\n\n  $: $dbLogs\n    .find({ type: currentType.name })\n    .then(res => {\n      selectLogs = res;\n    })\n    .catch(err => console.log(err));\n</script>\n\n<style>\n  li {\n    padding: 0;\n    margin-bottom: 15px;\n  }\n</style>\n\n<InfoWrapper title={currentType._id}>\n  <li>{currentType.desc}</li>\n  {#if selectLogs.length}\n    <StatCount {selectLogs} {logs} />\n    <StatDate {selectLogs} />\n    <StatLine {selectLogs} selector=\"division\" />\n  {/if}\n</InfoWrapper>\n",
    "<script>\n  // Stores\n  import { dbLogs } from \"../../stores/db\";\n\n  // Components\n  import InfoWrapper from \"../../components/InfoWrapper.svelte\";\n  import StatCount from \"../../components/StatCount.svelte\";\n  import StatLine from \"../../components/StatLine.svelte\";\n  import StatDate from \"../../components/StatDate.svelte\";\n\n  // Model\n  export let currentDivision;\n  export let logs;\n  let selectLogs = [];\n\n  $: $dbLogs\n    .find({ division: currentDivision.name })\n    .then(res => {\n      selectLogs = res;\n    })\n    .catch(err => console.log(err));\n</script>\n\n<style>\n  li {\n    padding: 0;\n    margin-bottom: 15px;\n  }\n</style>\n\n<InfoWrapper title={currentDivision._id}>\n  <li class=\"section\">{currentDivision.desc}</li>\n  {#if selectLogs.length}\n    <StatCount {selectLogs} {logs} />\n    <StatDate {selectLogs} />\n    <StatLine {selectLogs} selector=\"type\" />\n  {/if}\n</InfoWrapper>\n",
    "<script>\n  // Svelte\n  import { afterUpdate } from \"svelte\";\n\n  // Utils\n  const { DateTime } = require(\"luxon\");\n\n  // Model\n  let listHeight;\n  export let logs;\n  export let currentIndex;\n\n  // Lifecycle\n  afterUpdate(() => {\n    window.scrollTo({\n      top: currentIndex * (listHeight / logs.length) - 50,\n      left: 0,\n      behavior: \"smooth\"\n    });\n  });\n</script>\n\n<style>\n  ul {\n    width: 100%;\n    margin: 0;\n    padding: 20px;\n    list-style: none;\n  }\n\n  li {\n    display: flex;\n    justify-content: space-between;\n    padding: 5px 10px;\n    border-bottom: 1px dotted var(--f_dark);\n  }\n\n  .active {\n    background: var(--f);\n    color: var(--bg);\n  }\n\n  p {\n    margin: 0;\n    padding: 5px 0;\n    display: flex;\n    align-items: baseline;\n  }\n\n  .section {\n    padding-bottom: 5px;\n  }\n\n  .meta {\n    justify-content: space-between;\n    padding: 5px 0;\n    margin: 0;\n    flex-grow: 2;\n  }\n\n  .time {\n    width: 50px;\n    flex-shrink: 0;\n    font-weight: bold;\n    margin-right: 10px;\n  }\n\n  .date {\n    width: 100px;\n    font-style: italic;\n  }\n\n  .term {\n    font-weight: bold;\n    margin: 0 auto 0 0;\n  }\n</style>\n\n<ul bind:clientHeight={listHeight}>\n  {#each logs as log, i (log._id)}\n    <li class={i === currentIndex ? `active` : ``}>\n      <p class=\"meta\">\n        <span class=\"time\">{log.time}h</span>\n        <span class=\"date\">{DateTime.fromISO(log.date).toLocaleString()}</span>\n        <span class=\"term\">{log.term}</span>\n      </p>\n      <p class=\"section\">{log.type} / {log.division}</p>\n    </li>\n  {/each}\n</ul>\n",
    "<script>\n  // Svelte\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  // Components\n  import SingleField from \"../../components/single/Field.svelte\";\n\n  // Model\n  let currentFieldIndex = -1;\n  let msgError = false;\n  export let fields = [];\n  export let editField = false;\n\n  $: currentField = fields[currentFieldIndex]\n    ? fields[currentFieldIndex].type\n    : false;\n\n  $: if (fields) {\n    editField = false;\n    msgError = false;\n  }\n\n  //Events\n  function onCange(e) {\n    const { type, value } = e.detail;\n    if ((type === `name` || type === `desc`) && !value.length) {\n      msgError = `required field`;\n      return;\n    }\n    dispatch(`change`, { type, value });\n  }\n\n  function onWindowKeydown(e) {\n    switch (e.key) {\n      case `ArrowDown`:\n        e.preventDefault();\n        if (currentFieldIndex < fields.length - 1) {\n          currentFieldIndex = currentFieldIndex + 1;\n        }\n        break;\n      case `ArrowUp`:\n        e.preventDefault();\n        if (currentFieldIndex > -1) {\n          currentFieldIndex = currentFieldIndex - 1;\n        }\n        break;\n      case `Enter`:\n        if (!editField) {\n          e.preventDefault();\n          editField = currentField;\n        }\n        break;\n    }\n  }\n</script>\n\n<style>\n  ul {\n    position: relative;\n    z-index: 10;\n    margin: 0;\n    padding: 20px 0;\n    list-style: none;\n  }\n\n  li {\n    margin: 0 0 10px;\n  }\n</style>\n\n<svelte:window on:keydown={onWindowKeydown} />\n\n<ul>\n  {#each fields as field, i (field.type)}\n    <li>\n      <SingleField\n        type={field.type}\n        text={field.value}\n        isEdit={editField === field.type}\n        isCurrent={currentField === field.type}\n        on:change={onCange}\n        {msgError} />\n    </li>\n  {/each}\n</ul>\n",
    "<script>\n  // Svelte\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  // Utils\n  import birker from \"../../utils/birker\";\n\n  // Components\n  import Input from \"../../components/create/Input.svelte\";\n\n  // Model\n  let value = ``;\n  export let note;\n  export let editField = false;\n\n  $: if (note) editField = false;\n\n  // Events\n  const onChange = () => {\n    if (value.length === 0) value = `empty`;\n    dispatch(`change`, { type: `note`, value });\n  };\n\n  function onWindowKeydown(e) {\n    switch (e.key) {\n      case `Enter`:\n        if (!editField) {\n          e.preventDefault();\n          value = note;\n          editField = true;\n        }\n        break;\n    }\n  }\n</script>\n\n<style>\n  article {\n    position: relative;\n    z-index: 10;\n    margin: 20px 0;\n    padding: 10px 20px;\n    background: var(--bg);\n  }\n</style>\n\n<svelte:window on:keydown={onWindowKeydown} />\n\n<article class=\"formated\">\n  {#if editField}\n    <Input bind:value on:submit={onChange} />\n  {:else}\n    {@html birker(note)}\n  {/if}\n</article>\n",
    "<script>\n  // Utils\n  import typewriter from \"../../utils/typewriter\";\n\n  // Model\n  export let msgError;\n  export let isEdit = false;\n</script>\n\n<style>\n  li {\n    display: flex;\n    align-items: baseline;\n  }\n\n  span {\n    width: 25%;\n    flex-shrink: 0;\n    padding: 0 20px 0 0;\n    text-align: right;\n    color: var(--f_med);\n  }\n\n  p {\n    margin: 0;\n    padding: 10px 20px;\n    color: var(--error);\n    border-left: 1px solid var(--f_med);\n  }\n</style>\n\n{#if msgError}\n  <li>\n    {#if !isEdit}\n      <span>⍭</span>\n    {/if}\n    <p in:typewriter>{msgError}</p>\n  </li>\n{/if}\n",
    "<script>\n  // Model\n  export let title;\n</script>\n\n<style>\n  header {\n    display: flex;\n    align-items: center;\n    min-height: 50px;\n    padding: 10px;\n    border-bottom: 1px solid var(--f_med);\n  }\n\n  span {\n    width: 25%;\n    flex-shrink: 0;\n    padding: 0 20px 0 0;\n    text-align: right;\n    color: var(--f_med);\n  }\n\n  b {\n    display: inline-block;\n    min-width: 16px;\n    padding: 2px;\n    font-weight: normal;\n    text-align: center;\n    color: var(--f);\n    background: var(--bg);\n    border-radius: 3px;\n    box-shadow: 1px 3px 0 var(--f);\n  }\n\n  h1 {\n    margin: 0;\n    font-size: inherit;\n    line-height: 1;\n    text-transform: uppercase;\n  }\n</style>\n\n<header>\n  <span>\n    <b>esc</b>\n    back\n  </span>\n  <h1>{title}</h1>\n</header>\n",
    "<script>\n  // Model\n  export let name;\n</script>\n\n<style>\n  li {\n    display: flex;\n    align-items: baseline;\n    color: var(--f_med);\n  }\n\n  span {\n    width: 25%;\n    flex-shrink: 0;\n    padding: 0 20px 0 0;\n    text-align: right;\n  }\n\n  p {\n    margin: 0;\n    padding: 10px 20px;\n    border-left: 1px solid var(--f_med);\n  }\n</style>\n\n<li>\n  <span>⊡</span>\n  <p>{name}</p>\n</li>\n",
    "<script>\n  // Utils\n  import typewriter from \"../../utils/typewriter\";\n\n  // Model\n  export let log = {};\n  export let type = {};\n  export let division = {};\n  export let task = {};\n  export let term = {};\n  export let user = {};\n  export let isSuccess;\n</script>\n\n<style>\n  li {\n    display: flex;\n    align-items: baseline;\n  }\n\n  span {\n    width: 25%;\n    flex-shrink: 0;\n    padding: 0 20px 0 0;\n    text-align: right;\n    color: var(--f_med);\n  }\n\n  p {\n    margin: 0;\n    padding: 5px 20px;\n    border-left: 1px solid var(--f_med);\n  }\n</style>\n\n{#if isSuccess}\n  {#if term._id}\n    <li>\n      <span>⍜</span>\n      <p in:typewriter>{`Term created! ID: ${term._id}`}</p>\n    </li>\n  {/if}\n  {#if type._id}\n    <li>\n      <span>⍜</span>\n      <p in:typewriter>{`Type created! ID: ${type._id}`}</p>\n    </li>\n  {/if}\n  {#if division._id}\n    <li>\n      <span>⍜</span>\n      <p in:typewriter>{`Division created! ID: ${division._id}`}</p>\n    </li>\n  {/if}\n  {#if task._id}\n    <li>\n      <span>⍜</span>\n      <p in:typewriter>{`Task created! ID: ${task._id}`}</p>\n    </li>\n  {/if}\n  {#if log._id}\n    <li>\n      <span>⍜</span>\n      <p in:typewriter>{`Log created! ID: ${log._id}`}</p>\n    </li>\n  {/if}\n  {#if user._id}\n    <li>\n      <span>⍜</span>\n      <p in:typewriter>{`User created! ID: ${user._id}`}</p>\n    </li>\n  {/if}\n{/if}\n",
    "<script>\n  export let page;\n  export let type;\n</script>\n\n<style>\n  header {\n    position: sticky;\n    top: 0;\n    z-index: 1000;\n    display: flex;\n    height: 50px;\n    align-items: center;\n    justify-content: space-between;\n    padding: 14px 20px;\n    background: var(--bg);\n    border-bottom: 1px solid var(--f_med);\n  }\n\n  span {\n    color: var(--f_med);\n  }\n\n  b {\n    display: inline-block;\n    min-width: 16px;\n    padding: 2px;\n    font-weight: normal;\n    text-align: center;\n    color: var(--f);\n    background: var(--bg);\n    border-radius: 3px;\n    box-shadow: 1px 3px 0 var(--f);\n  }\n\n  ul {\n    display: flex;\n    margin: 0;\n    margin-right: auto;\n    padding: 0 20px;\n    list-style: none;\n  }\n\n  button {\n    margin: 0;\n    padding: 2px 10px;\n    font-family: inherit;\n    font-size: inherit;\n    line-height: 1;\n    color: var(--f);\n    opacity: 0.6;\n    border: none;\n    background: none;\n    text-transform: uppercase;\n  }\n\n  .active {\n    opacity: 1;\n    background: var(--f);\n    color: var(--bg);\n  }\n\n  .type {\n    padding: 0;\n    text-transform: uppercase;\n    font-style: italic;\n    color: var(--f);\n  }\n\n  .type::before {\n    content: \"○ \";\n  }\n</style>\n\n<header>\n  <span class=\"type\">{type}</span>\n  <ul>\n    <li>\n      <button class:active={page === `main`}>Main</button>\n    </li>\n    <li>\n      <button class:active={page === `note`}>Note</button>\n    </li>\n    <!-- <li>\n      <button class:active={page === `stat`}>Stat</button>\n    </li> -->\n  </ul>\n  <span>\n    <b>esc</b>\n    back\n  </span>\n</header>\n",
    "<script>\n  // Utils\n  import getHours from \"../utils/getHours\";\n\n  // Model\n  export let logs = [];\n  export let selectLogs = [];\n\n  $: logsCount = selectLogs ? selectLogs.length : 0;\n\n  $: time = selectLogs ? getHours(selectLogs) : 0;\n\n  $: allTime = logs ? getHours(logs) : 0;\n</script>\n\n<style>\n  li {\n    margin-bottom: 20px;\n  }\n</style>\n\n<li class=\"section\">\n  <span>{time}h / {logsCount} logs / {parseInt((time / allTime) * 100)}%</span>\n</li>\n",
    "<script>\n  // Model\n  export let title;\n</script>\n\n<style>\n  article {\n    position: fixed;\n    top: 50px;\n    bottom: 85px;\n    right: 0;\n    width: 50%;\n    padding: 20px 20px 0;\n  }\n\n  article::after {\n    content: \"\";\n    position: absolute;\n    bottom: 0;\n    left: -20px;\n    display: block;\n    width: 1px;\n    height: 50px;\n    background: var(--f_med);\n  }\n\n  p {\n    position: absolute;\n    top: 0;\n    left: -40px;\n    padding: 5px 4px;\n    writing-mode: vertical-lr;\n    border-right: 1px solid var(--f_dark);\n    border-left: 1px solid var(--f_med);\n  }\n\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n</style>\n\n<article>\n  <p># {title}</p>\n  <ul>\n    <slot />\n  </ul>\n</article>\n",
    "<script>\n  // Utils\n  import getHours from \"../utils/getHours\";\n  import fixFloat from \"../utils/fixJsFloat\";\n\n  // Components\n  import GrafLine from \"./GrafLine.svelte\";\n\n  // Model\n  export let selectLogs;\n  export let selector;\n\n  $: time = selectLogs ? getHours(selectLogs) : null;\n\n  $: items = selectLogs\n    ? selectLogs\n        .reduce((arr, item) => {\n          if (arr.indexOf(item[selector]) < 0) {\n            return [...arr, item[selector]];\n          }\n          return arr;\n        }, [])\n        .map(item => ({\n          name: item,\n          time: fixFloat(\n            selectLogs.reduce((hours, log) => {\n              if (log[selector] === item) {\n                return hours + log.time;\n              }\n              return hours;\n            }, 0)\n          )\n        }))\n    : [];\n</script>\n\n<style>\n  li {\n    padding: 0;\n    margin: 0;\n  }\n\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  .section {\n    margin-bottom: 15px;\n  }\n\n  .name {\n    display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n    margin-bottom: 5px;\n  }\n</style>\n\n{#if items}\n  <li class=\"section\">\n    <ul>\n      {#each items as item (item.name)}\n        <li class=\"name\">\n          <span>{item.name}</span>\n          <span>{item.time}h</span>\n        </li>\n      {/each}\n    </ul>\n    <GrafLine items={items.map(item => item.time)} full={time} />\n  </li>\n{/if}\n",
    "<script>\n  // Svelte\n  import { onMount } from \"svelte\";\n\n  // Components\n  import GrafLine from \"./GrafLine.svelte\";\n\n  // Stores\n  import { dbTasks } from \"../stores/db\";\n\n  // Model\n  let allCount = 0;\n  let selectorCount = 0;\n  export let selector;\n\n  $: $dbTasks\n    .count(selector)\n    .then(res => {\n      selectorCount = res;\n    })\n    .catch(err => console.log(err));\n\n  // Lifecycle\n  onMount(() => {\n    $dbTasks\n      .count()\n      .then(res => (allCount = res))\n      .catch(err => console.log(err));\n  });\n</script>\n\n<style>\n  li {\n    padding: 0;\n    margin: 0;\n  }\n\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  .section {\n    margin-bottom: 15px;\n  }\n\n  .name {\n    display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n    margin-bottom: 5px;\n  }\n</style>\n\n{#if selectorCount}\n  <li class=\"section\">\n    <ul>\n      <li class=\"name\">\n        <span>tasks / all</span>\n        <span>{selectorCount} / {allCount}</span>\n      </li>\n    </ul>\n    <GrafLine items={[selectorCount]} full={allCount} />\n  </li>\n{/if}\n",
    "<script>\n  // Svelte\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  // Components\n  import Input from \"../create/Input.svelte\";\n  import Error from \"../create/Error.svelte\";\n\n  // Model\n  let value = ``;\n  export let type;\n  export let text;\n  export let isEdit = false;\n  export let isCurrent = false;\n  export let msgError = false;\n\n  $: if (isEdit) value = text;\n\n  // Events\n  const onChange = () =>\n    dispatch(`change`, {\n      type,\n      value\n    });\n</script>\n\n<style>\n  section {\n    padding: 5px 10px;\n    transition: 0.2s;\n    background: var(--bg);\n  }\n\n  h3 {\n    margin: 0;\n    font-size: inherit;\n    font-weight: normal;\n    text-transform: lowercase;\n    color: var(--f_med);\n  }\n\n  p {\n    margin: 10px 0;\n    display: flex;\n  }\n\n  p::before {\n    content: \"> \";\n    margin-right: 10px;\n    color: var(--f_med);\n  }\n\n  .active {\n    background: var(--f);\n    color: var(--bg);\n  }\n\n  .active h3 {\n    color: var(--bg);\n  }\n</style>\n\n<section class:active={isCurrent && !isEdit}>\n  <h3>{type}</h3>\n  {#if isEdit}\n    <Input bind:value on:submit={onChange} />\n    {#if msgError}\n      <Error {msgError} isEdit={true} />\n    {/if}\n  {:else}\n    <p>{text}</p>\n  {/if}\n</section>\n",
    "<script>\n  // Utils\n  const { DateTime, Interval } = require(\"luxon\");\n\n  // Components\n  import DaysGraf from \"./DaysGraf.svelte\";\n\n  // Model\n  export let selectLogs;\n\n  $: start = selectLogs\n    ? selectLogs.reduce((time, log) => {\n        const newTime = DateTime.fromISO(log.date);\n        return time.toMillis() < newTime.toMillis() ? time : newTime;\n      }, DateTime.fromISO(selectLogs[0].date))\n    : null;\n\n  $: end = selectLogs\n    ? selectLogs.reduce((time, log) => {\n        const newTime = DateTime.fromISO(log.date);\n        return time.toMillis() > newTime.toMillis() ? time : newTime;\n      }, DateTime.fromISO(selectLogs[0].date))\n    : null;\n</script>\n\n<style>\n  li {\n    padding: 0;\n    margin: 0;\n  }\n\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  .section {\n    margin-bottom: 15px;\n  }\n\n  .name {\n    display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n    margin-bottom: 5px;\n  }\n</style>\n\n{#if start && end}\n  <li class=\"section\">\n    <ul>\n      <li class=\"name\">\n        <span>{start.toLocaleString()}</span>\n        <span>{end.toLocaleString()}</span>\n      </li>\n    </ul>\n    <DaysGraf {start} {end} {selectLogs} />\n  </li>\n{/if}\n",
    "<script>\n  // Svelte\n  import { onMount, onDestroy, createEventDispatcher } from \"svelte\";\n\n  // Stores\n  import { isInput } from \"../../stores/muthur\";\n\n  // Model\n  let input;\n  export let value;\n  export let placeholder = ``;\n\n  // Lifecycle\n  onMount(() => {\n    input.focus();\n    isInput.set(true);\n  });\n\n  onDestroy(() => {\n    document.body.focus();\n    isInput.set(false);\n  });\n\n  // Methods\n  const inputResize = () => {\n    input.style.height = `auto`;\n    input.style.height = `${input.scrollHeight +\n      (input.offsetHeight - input.clientHeight)}px`;\n  };\n  const dispatch = createEventDispatcher();\n\n  // Events\n  $: if (value && input) inputResize();\n\n  function onKyedown(e) {\n    if (e.key === `Enter` && !e.shiftKey) {\n      e.preventDefault();\n      dispatch(`submit`);\n    } else if (e.key === `Tab`) {\n      e.preventDefault();\n      dispatch(`help`);\n    }\n  }\n</script>\n\n<style>\n  textarea {\n    width: 100%;\n    margin: 0;\n    padding: 10px 20px;\n    font-family: inherit;\n    font-size: inherit;\n    line-height: 1.2;\n    color: inherit;\n    background: none;\n    border: none;\n    border-left: 1px solid var(--f_med);\n    resize: none;\n  }\n</style>\n\n<svelte:window on:keydown={() => input.focus()} />\n\n<textarea\n  rows=\"1\"\n  bind:value\n  {placeholder}\n  on:keydown={onKyedown}\n  bind:this={input} />\n",
    "<script>\n  // Svelte\n  import { flip } from \"svelte/animate\";\n\n  // Model\n  export let helpers;\n  export let isTab;\n</script>\n\n<style>\n  li {\n    display: flex;\n    align-items: baseline;\n  }\n\n  span {\n    width: 25%;\n    flex-shrink: 0;\n    padding: 0 20px 0 0;\n    text-align: right;\n    color: var(--f_med);\n  }\n\n  ul {\n    margin: 0;\n    width: 100%;\n    padding: 10px 20px;\n    font-style: italic;\n    color: var(--f_med);\n    border-left: 1px solid var(--f_med);\n    overflow: hidden;\n    white-space: nowrap;\n  }\n\n  ul span {\n    width: auto;\n    padding-right: 10px;\n    color: var(--f);\n  }\n\n  b {\n    display: inline-block;\n    min-width: 16px;\n    padding: 2px;\n    font-weight: normal;\n    text-align: center;\n    color: var(--f);\n    background: var(--bg);\n    border-radius: 3px;\n    box-shadow: 1px 3px 0 var(--f);\n  }\n</style>\n\n{#if helpers.length}\n  <li>\n    <span>\n      {#if isTab}\n        <b>Tab</b>\n      {:else}⍉{/if}\n    </span>\n    <ul>\n      {#each helpers as help (help.name)}\n        <li animate:flip={{ duration: 200 }}>\n          <span>{help.name}</span>\n          {#if help.desc}~ {help.desc}{/if}\n        </li>\n      {/each}\n    </ul>\n  </li>\n{/if}\n",
    "<script>\n  // Utils\n  import marked from \"marked\";\n  const { DateTime } = require(\"luxon\");\n\n  // Components\n  import Input from \"./Input.svelte\";\n\n  // Model\n  export let name;\n  export let prop;\n  export let value;\n  export let request;\n  export let placeholder;\n  export let isMarked = false;\n</script>\n\n<style>\n  li {\n    display: flex;\n    align-items: baseline;\n  }\n\n  span {\n    width: 25%;\n    flex-shrink: 0;\n    padding: 0 20px 0 0;\n    text-align: right;\n    color: var(--f_med);\n  }\n\n  p,\n  div {\n    margin: 0;\n    padding: 10px 20px;\n    border-left: 1px solid var(--f_med);\n  }\n</style>\n\n{#if !prop}\n  <li>\n    <span>○</span>\n    <p>{request}</p>\n  </li>\n{/if}\n<li>\n  <span>{name}</span>\n  {#if !prop}\n    <Input bind:value {placeholder} on:submit on:help />\n  {:else if isMarked}\n    <div>\n      {@html marked(prop)}\n    </div>\n  {:else}\n    <p>\n      {name === `time` ? `${prop} ${prop === 1 ? `hour` : `hours`}` : name === `date` ? `${DateTime.fromISO(prop).toLocaleString()}` : `${prop}`}\n    </p>\n  {/if}\n</li>\n",
    "<script>\n  // Model\n  export let items;\n  export let full;\n</script>\n\n<style>\n  div {\n    display: flex;\n    align-items: stretch;\n    width: 100%;\n    height: 7px;\n    padding-bottom: 1px;\n    border-bottom: 1px solid var(--f_med);\n  }\n\n  span {\n    height: 100%;\n    margin: 0 1px;\n    background: var(--f);\n  }\n</style>\n\n<div>\n  {#each items as item, i (i)}\n    <span style={`width: ${item / (full / 100)}%`} />\n  {/each}\n</div>\n",
    "<script>\n  // Utils\n  const { DateTime, Interval } = require(\"luxon\");\n\n  // Model\n  export let start;\n  export let end;\n  export let selectLogs;\n\n  $: days =\n    start && end\n      ? new Array(\n          parseInt(Interval.fromDateTimes(start, end).length(\"days\")) + 1\n        ).fill(0)\n      : [];\n\n  $: active = days.map(\n    (item, i) =>\n      selectLogs.filter(\n        item =>\n          DateTime.fromISO(item.date).toISODate() ===\n          start.plus({ days: i }).toISODate()\n      ).length\n  );\n</script>\n\n<style>\n  div {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    height: 7px;\n    margin-bottom: 5px;\n    padding-bottom: 1px;\n    border-bottom: 1px solid var(--f_med);\n  }\n\n  span {\n    height: 100%;\n    flex-grow: 2;\n    margin: 0 1px;\n  }\n\n  span:last-child {\n    border: none;\n  }\n\n  .active {\n    background: var(--f);\n  }\n</style>\n\n<div>\n  {#each active as day, i}\n    <span class={day > 0 ? `active` : ``} />\n  {/each}\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}